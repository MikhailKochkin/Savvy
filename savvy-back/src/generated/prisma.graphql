# source: https://us1.prisma.sh/mikhail-kochkin/savvvy/dev
# timestamp: Sat Nov 24 2018 14:12:52 GMT+0300 (MSK)

type AggregateCase {
  count: Int!
}

type AggregateUser {
  count: Int!
}

type BatchPayload {
  """The number of nodes that have been affected by the Batch operation."""
  count: Long!
}

type Case implements Node {
  id: ID!
  title: String!
  description: String!
  mainText: String
  issue: String
  rule: String
  analysis: String
  conclusion: String
  image: String!
  largeImage: String!
  price: Int!
}

"""A connection to a list of items."""
type CaseConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [CaseEdge]!
  aggregate: AggregateCase!
}

input CaseCreateInput {
  title: String!
  description: String!
  mainText: String
  issue: String
  rule: String
  analysis: String
  conclusion: String
  image: String!
  largeImage: String!
  price: Int!
}

"""An edge in a connection."""
type CaseEdge {
  """The item at the end of the edge."""
  node: Case!

  """A cursor for use in pagination."""
  cursor: String!
}

enum CaseOrderByInput {
  id_ASC
  id_DESC
  title_ASC
  title_DESC
  description_ASC
  description_DESC
  mainText_ASC
  mainText_DESC
  issue_ASC
  issue_DESC
  rule_ASC
  rule_DESC
  analysis_ASC
  analysis_DESC
  conclusion_ASC
  conclusion_DESC
  image_ASC
  image_DESC
  largeImage_ASC
  largeImage_DESC
  price_ASC
  price_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
}

type CasePreviousValues {
  id: ID!
  title: String!
  description: String!
  mainText: String
  issue: String
  rule: String
  analysis: String
  conclusion: String
  image: String!
  largeImage: String!
  price: Int!
}

type CaseSubscriptionPayload {
  mutation: MutationType!
  node: Case
  updatedFields: [String!]
  previousValues: CasePreviousValues
}

input CaseSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [CaseSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [CaseSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [CaseSubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: CaseWhereInput
}

input CaseUpdateInput {
  title: String
  description: String
  mainText: String
  issue: String
  rule: String
  analysis: String
  conclusion: String
  image: String
  largeImage: String
  price: Int
}

input CaseUpdateManyMutationInput {
  title: String
  description: String
  mainText: String
  issue: String
  rule: String
  analysis: String
  conclusion: String
  image: String
  largeImage: String
  price: Int
}

input CaseWhereInput {
  """Logical AND on all given filters."""
  AND: [CaseWhereInput!]

  """Logical OR on all given filters."""
  OR: [CaseWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [CaseWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  title: String

  """All values that are not equal to given value."""
  title_not: String

  """All values that are contained in given list."""
  title_in: [String!]

  """All values that are not contained in given list."""
  title_not_in: [String!]

  """All values less than the given value."""
  title_lt: String

  """All values less than or equal the given value."""
  title_lte: String

  """All values greater than the given value."""
  title_gt: String

  """All values greater than or equal the given value."""
  title_gte: String

  """All values containing the given string."""
  title_contains: String

  """All values not containing the given string."""
  title_not_contains: String

  """All values starting with the given string."""
  title_starts_with: String

  """All values not starting with the given string."""
  title_not_starts_with: String

  """All values ending with the given string."""
  title_ends_with: String

  """All values not ending with the given string."""
  title_not_ends_with: String
  description: String

  """All values that are not equal to given value."""
  description_not: String

  """All values that are contained in given list."""
  description_in: [String!]

  """All values that are not contained in given list."""
  description_not_in: [String!]

  """All values less than the given value."""
  description_lt: String

  """All values less than or equal the given value."""
  description_lte: String

  """All values greater than the given value."""
  description_gt: String

  """All values greater than or equal the given value."""
  description_gte: String

  """All values containing the given string."""
  description_contains: String

  """All values not containing the given string."""
  description_not_contains: String

  """All values starting with the given string."""
  description_starts_with: String

  """All values not starting with the given string."""
  description_not_starts_with: String

  """All values ending with the given string."""
  description_ends_with: String

  """All values not ending with the given string."""
  description_not_ends_with: String
  mainText: String

  """All values that are not equal to given value."""
  mainText_not: String

  """All values that are contained in given list."""
  mainText_in: [String!]

  """All values that are not contained in given list."""
  mainText_not_in: [String!]

  """All values less than the given value."""
  mainText_lt: String

  """All values less than or equal the given value."""
  mainText_lte: String

  """All values greater than the given value."""
  mainText_gt: String

  """All values greater than or equal the given value."""
  mainText_gte: String

  """All values containing the given string."""
  mainText_contains: String

  """All values not containing the given string."""
  mainText_not_contains: String

  """All values starting with the given string."""
  mainText_starts_with: String

  """All values not starting with the given string."""
  mainText_not_starts_with: String

  """All values ending with the given string."""
  mainText_ends_with: String

  """All values not ending with the given string."""
  mainText_not_ends_with: String
  issue: String

  """All values that are not equal to given value."""
  issue_not: String

  """All values that are contained in given list."""
  issue_in: [String!]

  """All values that are not contained in given list."""
  issue_not_in: [String!]

  """All values less than the given value."""
  issue_lt: String

  """All values less than or equal the given value."""
  issue_lte: String

  """All values greater than the given value."""
  issue_gt: String

  """All values greater than or equal the given value."""
  issue_gte: String

  """All values containing the given string."""
  issue_contains: String

  """All values not containing the given string."""
  issue_not_contains: String

  """All values starting with the given string."""
  issue_starts_with: String

  """All values not starting with the given string."""
  issue_not_starts_with: String

  """All values ending with the given string."""
  issue_ends_with: String

  """All values not ending with the given string."""
  issue_not_ends_with: String
  rule: String

  """All values that are not equal to given value."""
  rule_not: String

  """All values that are contained in given list."""
  rule_in: [String!]

  """All values that are not contained in given list."""
  rule_not_in: [String!]

  """All values less than the given value."""
  rule_lt: String

  """All values less than or equal the given value."""
  rule_lte: String

  """All values greater than the given value."""
  rule_gt: String

  """All values greater than or equal the given value."""
  rule_gte: String

  """All values containing the given string."""
  rule_contains: String

  """All values not containing the given string."""
  rule_not_contains: String

  """All values starting with the given string."""
  rule_starts_with: String

  """All values not starting with the given string."""
  rule_not_starts_with: String

  """All values ending with the given string."""
  rule_ends_with: String

  """All values not ending with the given string."""
  rule_not_ends_with: String
  analysis: String

  """All values that are not equal to given value."""
  analysis_not: String

  """All values that are contained in given list."""
  analysis_in: [String!]

  """All values that are not contained in given list."""
  analysis_not_in: [String!]

  """All values less than the given value."""
  analysis_lt: String

  """All values less than or equal the given value."""
  analysis_lte: String

  """All values greater than the given value."""
  analysis_gt: String

  """All values greater than or equal the given value."""
  analysis_gte: String

  """All values containing the given string."""
  analysis_contains: String

  """All values not containing the given string."""
  analysis_not_contains: String

  """All values starting with the given string."""
  analysis_starts_with: String

  """All values not starting with the given string."""
  analysis_not_starts_with: String

  """All values ending with the given string."""
  analysis_ends_with: String

  """All values not ending with the given string."""
  analysis_not_ends_with: String
  conclusion: String

  """All values that are not equal to given value."""
  conclusion_not: String

  """All values that are contained in given list."""
  conclusion_in: [String!]

  """All values that are not contained in given list."""
  conclusion_not_in: [String!]

  """All values less than the given value."""
  conclusion_lt: String

  """All values less than or equal the given value."""
  conclusion_lte: String

  """All values greater than the given value."""
  conclusion_gt: String

  """All values greater than or equal the given value."""
  conclusion_gte: String

  """All values containing the given string."""
  conclusion_contains: String

  """All values not containing the given string."""
  conclusion_not_contains: String

  """All values starting with the given string."""
  conclusion_starts_with: String

  """All values not starting with the given string."""
  conclusion_not_starts_with: String

  """All values ending with the given string."""
  conclusion_ends_with: String

  """All values not ending with the given string."""
  conclusion_not_ends_with: String
  image: String

  """All values that are not equal to given value."""
  image_not: String

  """All values that are contained in given list."""
  image_in: [String!]

  """All values that are not contained in given list."""
  image_not_in: [String!]

  """All values less than the given value."""
  image_lt: String

  """All values less than or equal the given value."""
  image_lte: String

  """All values greater than the given value."""
  image_gt: String

  """All values greater than or equal the given value."""
  image_gte: String

  """All values containing the given string."""
  image_contains: String

  """All values not containing the given string."""
  image_not_contains: String

  """All values starting with the given string."""
  image_starts_with: String

  """All values not starting with the given string."""
  image_not_starts_with: String

  """All values ending with the given string."""
  image_ends_with: String

  """All values not ending with the given string."""
  image_not_ends_with: String
  largeImage: String

  """All values that are not equal to given value."""
  largeImage_not: String

  """All values that are contained in given list."""
  largeImage_in: [String!]

  """All values that are not contained in given list."""
  largeImage_not_in: [String!]

  """All values less than the given value."""
  largeImage_lt: String

  """All values less than or equal the given value."""
  largeImage_lte: String

  """All values greater than the given value."""
  largeImage_gt: String

  """All values greater than or equal the given value."""
  largeImage_gte: String

  """All values containing the given string."""
  largeImage_contains: String

  """All values not containing the given string."""
  largeImage_not_contains: String

  """All values starting with the given string."""
  largeImage_starts_with: String

  """All values not starting with the given string."""
  largeImage_not_starts_with: String

  """All values ending with the given string."""
  largeImage_ends_with: String

  """All values not ending with the given string."""
  largeImage_not_ends_with: String
  price: Int

  """All values that are not equal to given value."""
  price_not: Int

  """All values that are contained in given list."""
  price_in: [Int!]

  """All values that are not contained in given list."""
  price_not_in: [Int!]

  """All values less than the given value."""
  price_lt: Int

  """All values less than or equal the given value."""
  price_lte: Int

  """All values greater than the given value."""
  price_gt: Int

  """All values greater than or equal the given value."""
  price_gte: Int
}

input CaseWhereUniqueInput {
  id: ID
}

"""
The `Long` scalar type represents non-fractional signed whole numeric values.
Long can represent values between -(2^63) and 2^63 - 1.
"""
scalar Long

type Mutation {
  createUser(data: UserCreateInput!): User!
  createCase(data: CaseCreateInput!): Case!
  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User
  updateCase(data: CaseUpdateInput!, where: CaseWhereUniqueInput!): Case
  deleteUser(where: UserWhereUniqueInput!): User
  deleteCase(where: CaseWhereUniqueInput!): Case
  upsertUser(where: UserWhereUniqueInput!, create: UserCreateInput!, update: UserUpdateInput!): User!
  upsertCase(where: CaseWhereUniqueInput!, create: CaseCreateInput!, update: CaseUpdateInput!): Case!
  updateManyUsers(data: UserUpdateManyMutationInput!, where: UserWhereInput): BatchPayload!
  updateManyCases(data: CaseUpdateManyMutationInput!, where: CaseWhereInput): BatchPayload!
  deleteManyUsers(where: UserWhereInput): BatchPayload!
  deleteManyCases(where: CaseWhereInput): BatchPayload!
}

enum MutationType {
  CREATED
  UPDATED
  DELETED
}

"""An object with an ID"""
interface Node {
  """The id of the object."""
  id: ID!
}

"""Information about pagination in a connection."""
type PageInfo {
  """When paginating forwards, are there more items?"""
  hasNextPage: Boolean!

  """When paginating backwards, are there more items?"""
  hasPreviousPage: Boolean!

  """When paginating backwards, the cursor to continue."""
  startCursor: String

  """When paginating forwards, the cursor to continue."""
  endCursor: String
}

type Query {
  users(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User]!
  cases(where: CaseWhereInput, orderBy: CaseOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Case]!
  user(where: UserWhereUniqueInput!): User
  case(where: CaseWhereUniqueInput!): Case
  usersConnection(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): UserConnection!
  casesConnection(where: CaseWhereInput, orderBy: CaseOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): CaseConnection!

  """Fetches an object given its ID"""
  node(
    """The ID of an object"""
    id: ID!
  ): Node
}

type Subscription {
  user(where: UserSubscriptionWhereInput): UserSubscriptionPayload
  case(where: CaseSubscriptionWhereInput): CaseSubscriptionPayload
}

type User implements Node {
  id: ID!
  name: String!
  email: String!
}

"""A connection to a list of items."""
type UserConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [UserEdge]!
  aggregate: AggregateUser!
}

input UserCreateInput {
  name: String!
  email: String!
}

"""An edge in a connection."""
type UserEdge {
  """The item at the end of the edge."""
  node: User!

  """A cursor for use in pagination."""
  cursor: String!
}

enum UserOrderByInput {
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  email_ASC
  email_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
}

type UserPreviousValues {
  id: ID!
  name: String!
  email: String!
}

type UserSubscriptionPayload {
  mutation: MutationType!
  node: User
  updatedFields: [String!]
  previousValues: UserPreviousValues
}

input UserSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [UserSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [UserSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [UserSubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: UserWhereInput
}

input UserUpdateInput {
  name: String
  email: String
}

input UserUpdateManyMutationInput {
  name: String
  email: String
}

input UserWhereInput {
  """Logical AND on all given filters."""
  AND: [UserWhereInput!]

  """Logical OR on all given filters."""
  OR: [UserWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [UserWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  name: String

  """All values that are not equal to given value."""
  name_not: String

  """All values that are contained in given list."""
  name_in: [String!]

  """All values that are not contained in given list."""
  name_not_in: [String!]

  """All values less than the given value."""
  name_lt: String

  """All values less than or equal the given value."""
  name_lte: String

  """All values greater than the given value."""
  name_gt: String

  """All values greater than or equal the given value."""
  name_gte: String

  """All values containing the given string."""
  name_contains: String

  """All values not containing the given string."""
  name_not_contains: String

  """All values starting with the given string."""
  name_starts_with: String

  """All values not starting with the given string."""
  name_not_starts_with: String

  """All values ending with the given string."""
  name_ends_with: String

  """All values not ending with the given string."""
  name_not_ends_with: String
  email: String

  """All values that are not equal to given value."""
  email_not: String

  """All values that are contained in given list."""
  email_in: [String!]

  """All values that are not contained in given list."""
  email_not_in: [String!]

  """All values less than the given value."""
  email_lt: String

  """All values less than or equal the given value."""
  email_lte: String

  """All values greater than the given value."""
  email_gt: String

  """All values greater than or equal the given value."""
  email_gte: String

  """All values containing the given string."""
  email_contains: String

  """All values not containing the given string."""
  email_not_contains: String

  """All values starting with the given string."""
  email_starts_with: String

  """All values not starting with the given string."""
  email_not_starts_with: String

  """All values ending with the given string."""
  email_ends_with: String

  """All values not ending with the given string."""
  email_not_ends_with: String
}

input UserWhereUniqueInput {
  id: ID
  email: String
}
