enum Permission {
  ADMIN
  USER
  CASECREATE
  CASEUPDATE
  CASEDELETE
  PERMISSIONUPDATE
}

type User {
  id: ID! @unique
  name: String!
  email: String! @unique
  password: String!
  resetToken: String
  resetTokenExpiry: Float
  permissions: [Permission]
  coursePages: [CoursePage] @relation(name: "UserCoursePage" onDelete: CASCADE)
  sandboxPages: [SandboxPage] @relation(name: "UserSandboxPage" onDelete: CASCADE)
  sandboxPageGoals: [SandboxPageGoal] @relation(name: "UserSandboxPageGoals")
  lessons: [Lesson]!
  tests: [Test]!
  problems: [Problem]!
  isFamiliar: Boolean! @default(value: "false")
  createdAt: DateTime!
  favourites: [ID]
}

type CoursePage {
  id: ID! @unique
  title: String!
  description: String!
  image: String!
  user: User! @relation(name: "UserCoursePage")
  lessons: [Lesson]! @relation(name: "LessonsOnCoursePage" onDelete: CASCADE)
  tests: [Test]! @relation(name: "TestsOnCoursePage" onDelete: CASCADE)
  problems: [Problem]! @relation(name: "ProblemsOnCoursePage" onDelete: CASCADE)
  tags: [String]
  createdAt: DateTime!
  updatedAt: DateTime!
}

type SandboxPage {
  id: ID! @unique
  title: String!
  description: String!
  image: String!
  user: User! @relation(name: "UserSandboxPage")
  sandboxes: [Sandbox]! @relation(name: "SandboxesOnSandboxPage" onDelete: CASCADE)
  sandboxPageGoals: [SandboxPageGoal] @relation(name: "GoalsOnSandboxPage" onDelete: CASCADE)
  createdAt: DateTime!
  updatedAt: DateTime!
}

type SandboxPageGoal {
  id: ID! @unique
  goal: String!
  user: User! @relation(name: "UserSandboxPageGoals")
  completed: Boolean! @default(value: "false")
  sandboxPage: SandboxPage @relation(name: "GoalsOnSandboxPage")
  sandboxPageID: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type Lesson {
  id: ID! @unique
  text: String!
  video: String
  user: User!
  coursePage: CoursePage! @relation(name: "LessonsOnCoursePage")
  coursePageID: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type Sandbox {
  id: ID! @unique
  text: String!
  video: String
  user: User!
  sandboxPage: SandboxPage! @relation(name: "SandboxesOnSandboxPage")
  sandboxPageID: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  likes: Int @default(value: "0")
}

type Test {
  id: ID! @unique
  question: String!
  answer1: String!
  answer1Correct: String!
  answer2: String!
  answer2Correct: String!
  answer3: String
  answer3Correct: String 
  answer4: String
  answer4Correct: String
  user: User!
  coursePage: CoursePage! @relation(name: "TestsOnCoursePage")
  coursePageID: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type Problem {
  id: ID! @unique
  text: String!
  hints: String
  solution: String
  answer: String!
  user: User!
  coursePage: CoursePage! @relation(name: "ProblemsOnCoursePage")
  coursePageID: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
}